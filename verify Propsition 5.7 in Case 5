// verify Propsition 5.7 in Case 5, please chose proper "p" and "n" in "FiniteField(p,n)". 

// generate some proper q such that "q\equiv 1\mod 4" and "f\equiv 3\mod 4" and "s=5" and "p \nmid s".

A:={};
for t in [0..100] do 
    if IsPrimePower((5)^2+t^2) then A join:={(5)^2+t^2}; end if;
end for;

B:={};
for x in A do 
    p:=Random(PrimeBasis(x));
    a:=IntegerRing()!x;
    if (a mod 4) eq 1 and 5 mod p ne 0 then B join:={(a-1)/4}; end if;
end for;

C:={};
for x in B do 
    a:=IntegerRing()!x;
    if a mod 4 eq 3 then C join:={4*a+1}; end if;
end for;

C;

for x in C do 
  if IsPrime(x) then print "yes";else print "no";end if;
end for;

// get C={ 29, 61, 349, 509, 701, 1181, 1789, 2141, 3389, 5501, 8861, 9629 }.


F:=FiniteField(701,1);
w:=PrimitiveElement(F);

q:=701;
e:=4;
f:=IntegerRing()!((q-1)/e);
C0:={w^(e*j):j in [0..f-1]};

CC:=[];
for i in [0..e-1] do
    Ci:={w^i*x:x in C0};
    Include(~CC,Ci);
end for;

G:={x:x in F};
G0:=G diff {0};


for i in [1..4] do 
P:=CC[i];
N:={F!0};


Ct:=function(P,N);
M1:={**};
M2:={**};
for x,y in P do
   Include(~M1,x-y);
end for;

for x,y in N do
   Include(~M1,x-y);
end for;

for x in P do 
    for y in N do 
        Include(~M2,x-y);
        Include(~M2,y-x);
    end for;
end for;

C:={};
for x in G0 do 
    C join:={Multiplicity(M1,x)-Multiplicity(M2,x)};
end for;
return C;
end function;

Cts:=Ct(P,N);

if #Cts eq 1 then print "D=P-N is an SDS"; print "lambda=",Random(Cts);else print "D=P-N is not an SDS";end if;


end for;
